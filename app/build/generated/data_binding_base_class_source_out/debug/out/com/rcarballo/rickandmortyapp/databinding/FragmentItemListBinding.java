// Generated by data binding compiler. Do not edit!
package com.rcarballo.rickandmortyapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.core.widget.ContentLoadingProgressBar;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.recyclerview.widget.RecyclerView;
import com.rcarballo.rickandmortyapp.ListViewModel;
import com.rcarballo.rickandmortyapp.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentItemListBinding extends ViewDataBinding {
  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-sw600dp/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final Guideline guideline;

  @NonNull
  public final RecyclerView itemList;

  @NonNull
  public final ConstraintLayout itemListContainer;

  @NonNull
  public final ImageView loadingImage;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-sw600dp/</li>
   * </ul>
   */
  @Nullable
  public final ContentLoadingProgressBar loadingProgressBar;

  @Bindable
  protected ListViewModel mViewModel;

  protected FragmentItemListBinding(Object _bindingComponent, View _root, int _localFieldCount,
      Guideline guideline, RecyclerView itemList, ConstraintLayout itemListContainer,
      ImageView loadingImage, ContentLoadingProgressBar loadingProgressBar) {
    super(_bindingComponent, _root, _localFieldCount);
    this.guideline = guideline;
    this.itemList = itemList;
    this.itemListContainer = itemListContainer;
    this.loadingImage = loadingImage;
    this.loadingProgressBar = loadingProgressBar;
  }

  public abstract void setViewModel(@Nullable ListViewModel viewModel);

  @Nullable
  public ListViewModel getViewModel() {
    return mViewModel;
  }

  @NonNull
  public static FragmentItemListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_item_list, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentItemListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentItemListBinding>inflateInternal(inflater, R.layout.fragment_item_list, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentItemListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_item_list, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentItemListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentItemListBinding>inflateInternal(inflater, R.layout.fragment_item_list, null, false, component);
  }

  public static FragmentItemListBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentItemListBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentItemListBinding)bind(component, view, R.layout.fragment_item_list);
  }
}
